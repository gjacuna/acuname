<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GaK on GaK</title>
    <link>/</link>
    <description>Recent content in GaK on GaK</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 03 Mar 2022 00:00:00 -0400</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Posts</title>
      <link>/posts/</link>
      <pubDate>Thu, 03 Mar 2022 00:00:00 -0400</pubDate>
      
      <guid>/posts/</guid>
      <description></description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Hola/Hello/Hallo&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re here, you&amp;rsquo;re either stalking me or are genuinely interested in me. Regardless, check out my &lt;a href=&#34;./&#34;&gt;social media profiles&lt;/a&gt; or &lt;span id = &#39;coming&#39;&gt;wait 20 seconds to see something cool (for me at least) I implemented here.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Also, &lt;strong&gt;help us figure out the answer to humanity&amp;rsquo;s ultimate question: &lt;a href=&#34;http://toiletpaperorientation.org&#34;&gt;The correct way to orient Toilet Paper&lt;/a&gt;&lt;/strong&gt;, via the Toilet Paper Orientation Foundation.&lt;/p&gt;
&lt;p&gt;Salud&lt;/p&gt;
&lt;div id=&#34;timer&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;text/javascript&#34;&gt;
var x = 1000;
var y = 1000;
var cycles = 1000;
var side = 5;
let board = Array.from(Array(x/side), () =&gt; new Array(y/side));
for(i=0;i&lt;x/side;i++){
    for(j=0;j&lt;y/side;j++){
        if(Math.floor(Math.random()*100+1)&lt;=20){
            board[i][j]=1;
        }
        else{
            board[i][j]=0;
        }
    }
}
function sumOfNeighbours(temp_board,i,j){
    var left = i-1;
    var right = i+1;
    var up = j-1;
    var down = j+1;
    if(i==0){
        left = x/side-1;
    }
    else if(i == x/side-1){
        right = 0;
    }
    if(j==0){
        up = y/side-1;
    }
    else if(j == y/side-1){
        down = 0;
    }
    return (temp_board[left][up]+temp_board[i][up]+temp_board[right][up]+temp_board[left][j]+temp_board[right][j]+temp_board[left][down]+temp_board[i][down]+temp_board[right][down]);
}
//var c = document.getElementById(&#34;game&#34;);
var c = document.createElement(&#39;canvas&#39;);
c.width = 1000;
c.height = 1000;
var ctx = c.getContext(&#34;2d&#34;);
var cycle_time = 1000;
var wait_time = 20000;
var total_time = cycle_time * cycles + wait_time;
// var my_wait_interval = setInterval(function(){
//     wait_time -= cycle_time;
//     $(&#34;#timer&#34;).html(&#34;Seconds of wait left:&#34;+(wait_time/cycle_time-1)+&#34;.&#34;);
//     if(wait_time&lt;=0){
//         clearInterval(my_wait_interval);
//     }
// }, cycle_time);
var first_cycle = true;
var my_interval = setInterval(function(){
    if(wait_time&gt;0){
        $(&#34;#coming&#34;).html(&#34;wait &#34;+(wait_time/cycle_time-1)+&#34; seconds to see something cool (for me at least) I implemented here.&#34;);
        wait_time -= cycle_time;
    }else{
        if(first_cycle)
            $(&#34;#coming&#34;).html(&#34;the &lt;a href=&#39;https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life&#39; target=&#39;_blank&#39;&gt;Conway’s Game of Life&lt;/a&gt; I implemented on JS around this div (I’m still not convinced it’s properly done though, arrays in JS are a bitch).&#34;);
        let previous_board = JSON.parse(JSON.stringify(board));
        $(&#34;#timer&#34;).html(&#34;Cycles left:&#34;+(total_time/cycle_time-1)+&#34;.&#34;);
        for(i=0;i&lt;x/side;i++){
    		for(j=0;j&lt;y/side;j++){
                //check for neighbours
    			if(previous_board[i][j] == 1){
                    if(sumOfNeighbours(previous_board,i,j) &lt; 2 || sumOfNeighbours(previous_board,i,j) &gt; 3){
                        board[i][j] = 0;//dies
                    }
                }
                else{
                    if(sumOfNeighbours(previous_board,i,j) == 3){
                        board[i][j] = 1;//lives
                    }
                }
    		}
    	}
        for(i=0;i&lt;x/side;i++){
    		for(j=0;j&lt;y/side;j++){
    			if(board[i][j]==1){
                    ctx.fillStyle = &#34;#f0f0f0&#34;;
    			    ctx.fillRect(i*side, j*side, side, side);
                }
                else{
                    ctx.fillStyle = &#34;white&#34;;
    			    ctx.fillRect(i*side, j*side, side, side);
                }
    		}
    	}
        document.getElementsByClassName(&#39;post-content&#39;)[0].style.background = &#39;url(&#39; + c.toDataURL() + &#39;)&#39;;
    }    
    total_time -= cycle_time;
    if(total_time&lt;=0){
        clearInterval(my_interval);
    }
}, cycle_time);
&lt;/script&gt;</description>
    </item>
    
  </channel>
</rss>